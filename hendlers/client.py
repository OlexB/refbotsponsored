from aiogram import types, Dispatcher
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from create_refbot import bot
from database import sqlite_db as sq
from config import ADMIN_ID, NOT_SUB_MESSAGE, BOT_NICKNAME
from markups import client_mkr
import datetime
import re


class FSMUsers(StatesGroup):
    users = State()
    Tarif = State()
    url = State()
    zajavka = State()
    zajavka_prem = State()
    addedit_kart = State()
    sum = State()

# ============================================ –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é =============================================================

async def btn_client(message: types.Message, state: FSMContext): 
    if message.chat.type == 'private':
# –ö–Ω–æ–ø–∫–∞ "–ú–Ü–ô –ö–ê–ë–Ü–ù–ï–¢"
        if message.text == '–ú—ñ–π –∫–∞–±—ñ–Ω–µ—Ç üë§':
            await message.answer(f"–ú—ñ–π –∫–∞–±—ñ–Ω–µ—Ç üë§", reply_markup=client_mkr.KabinetMarkups)
# –ö–Ω–æ–ø–∫–∞ "–ê–î–ú–Ü–ù–Ü–°–¢–†–ê–¢–û–†"
        elif message.text == '–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä ‚≠êÔ∏è':
            await message.answer(f"–©–æ–± –Ω–∞–ø–∏—Å–∞—Ç–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ", reply_markup=client_mkr.Admin)
# –ö–Ω–æ–ø–∫–∞ "–í—ñ–¥–≥—É–∫–∏"
        elif message.text == '–í—ñ–¥–≥—É–∫–∏ üó£':
            await message.answer(f"–©–æ–± –∑–∞–ª–∏—à–∏—Ç–∏ –≤—ñ–¥–≥—É–∫ –ø–µ—Ä–µ–π–¥—ñ—Ç—å –≤ —á–∞—Ç –∑ –≤—ñ–¥–≥—É–∫–∞–º–∏", reply_markup=client_mkr.Reviews)
# –ö–Ω–æ–ø–∫–∞ "–ù–ê–®–Ü –°–ü–û–ù–°–û–†–ò"
        elif message.text == '–ù–∞—à—ñ —Å–ø–æ–Ω—Å–æ—Ä–∏ üìå':
            sponsor = await sq.give_sponsor()
            await message.answer(f"–°–ø–∏—Å–æ–∫ –Ω–∞—à–∏—Ö —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤ üìå", reply_markup=client_mkr.sponsor_markups(sponsor))
# –ö–Ω–æ–ø–∫–∞ "–°–¢–ê–¢–ò –°–ü–û–ù–°–û–†–û–ú"
        elif message.text == '–°—Ç–∞—Ç–∏ —Å–ø–æ–Ω—Å–æ—Ä–æ–º üîë':
            await message.answer(f"‚ö†Ô∏è –©–æ–± –¥–æ–¥–∞—Ç–∏ —Å–≤—ñ–π –∫–∞–Ω–∞–ª –¥–æ —Å–ø–∏—Å–∫—É —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑—Ä–æ–±–∏—Ç–∏ –∫–∞–Ω–∞–ª –ø—É–±–ª—ñ—á–Ω–∏–º —ñ –¥–æ–¥–∞—Ç–∏ —Ü—å–æ–≥–æ –±–æ—Ç–∞ –≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∏ –≤–∞—à–æ–≥–æ –∫–∞–Ω–∞–ª—É\n‚ùóÔ∏è –Ü–Ω–∞–∫—à–µ –±–æ—Ç –Ω–µ –∑–º–æ–∂–µ –ø–µ—Ä–µ–≤—ñ—Ä—è—Ç–∏ —á–∏ –ø—ñ–¥–ø–∏—Å–∞–ª–∏—Å—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ –Ω–∞ –≤–∞—à –∫–∞–Ω–∞–ª", reply_markup=client_mkr.next_sponsor)
            await message.answer(f"–Ø–∫—â–æ –∑'—è–≤–∏–ª–∏—Å—å –ø–∏—Ç–∞–Ω–Ω—è –Ω–∞–ø–∏—à—ñ—Ç—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—É", reply_markup=client_mkr.Admin)
# –ö–Ω–æ–ø–∫–∞ "PREMIUM"
        elif message.text == 'PREMIUM üíé':
            if await sq.premium_user_exists(message.from_user.id) != 'prem':
                await message.answer(f"–ú–æ–∂–ª–∏–≤–æ—Å—Ç—ñ <b>PREMIUM</b>:\nüíé –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –ø–æ—Ä—ñ–≥ –≤–∏–≤–æ–¥—É <b>{await sq.minimum_prem_out()}</b> –≥—Ä–Ω\nüíé –¶—ñ–Ω–∞ –∑–∞ –∫–æ–∂–Ω–æ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞ <b>{await sq.premium_price_ref()}</b> –≥—Ä–Ω\nüíé –ó–Ω–∏–∂–∫–∞ –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä—Å—Ç–≤–æ\nüíé –®–≤–∏–¥–∫–∞ –æ–±—Ä–æ–±–∫–∞ –∑–∞—è–≤–æ–∫ –Ω–∞ –≤–∏–≤—ñ–¥\n\nüìå –í–∞—Ä—Ç—ñ—Å—Ç—å <b>PREMIUM</b> –∞–∫–∞—É–Ω—Ç—É —Å–∫–ª–∞–¥–∞—î <b>{await sq.premium_ak_price()}</b> –≥—Ä–Ω (<b>–ù–ê–ó–ê–í–ñ–î–ò</b>)", parse_mode='HTML', reply_markup=client_mkr.PremMune)
            else:
                await message.answer(f"<b>PREMIUM</b> –∞–∫–∞—É–Ω—Ç —É–∂–µ –∞–∫—Ç–∏–≤–Ω–∏–π ‚úÖ\n–ü—Ä–∏—î–º–Ω–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è üôÇ",parse_mode='HTML', reply_markup=client_mkr.ClientMenu)

# ===================================== –ú–µ–Ω—é –∫–Ω–æ–ø–∫–∏ "–ú–Ü–ô –ö–ê–ë–Ü–ù–ï–¢" =======================================================

# –ö–Ω–æ–ø–∫–∞ "–Ü–ù–§–û–†–ú–ê–¶–Ü–Ø"
        elif message.text == '–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è üìñ':
            await message.answer(f"<b>–Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</b> üìñ\n\n–î–∞—Ç–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó: <b>{await sq.data_reg(message.from_user.id)}</b>\n–í–∞—à –±–∞–ª–∞–Ω—Å: <b>{await sq.user_balance(message.from_user.id)} –≥—Ä–Ω</b> üíµ\n–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ä–µ—Ñ–µ—Ä–∞–ª—ñ–≤: <b>{await sq.count_referal(message.from_user.id)}</b> üë•\n–ó–Ω—è—Ç–æ –≥—Ä–æ—à–µ–π: <b>{await sq.user_balance_out(message.from_user.id)} –≥—Ä–Ω</b> üíµ\n–í–∞—à–∞ –∫–∞—Ä—Ç–∞: <b>{await sq.give_kart_inf(message.from_user.id)}</b> üí≥\nPREMIUM –∞–∫–∞—É–Ω—Ç: {await sq.premium_user_ex(message.from_user.id)}", reply_markup=client_mkr.Out_in, parse_mode='HTML')
# –ö–Ω–æ–ø–∫–∞ "–ú–û–á –†–ï–ö–í–Ü–ó–ò–¢–ò"
        elif message.text == '–ú–æ—ó —Ä–µ–∫–≤—ñ–∑–∏—Ç–∏ üí≥': 
            if await sq.user_kart_exists(message.from_user.id) == True:
                await message.answer(f"–í–∞—à–∞ –∫–∞—Ä—Ç–∞: üí≥\n{await sq.give_user_kart(message.from_user.id)}", reply_markup=client_mkr.requisitesMENU)
            else:
                await message.answer(f'‚ö†Ô∏è –í–∏ —â–µ –Ω–µ –¥–æ–¥–∞–ª–∏ –∫–∞—Ä—Ç—É ‚ö†Ô∏è', reply_markup=client_mkr.add_kart)
# –ö–Ω–æ–ø–∫–∞ "–í–ò–í–ï–°–¢–ò –ì–†–û–®–Ü"
        elif message.text == '–í–∏–≤–µ—Å—Ç–∏ –≥—Ä–æ—à—ñ üí∏': 
            sponsor = await sq.give_sponsor()
            if await sq.user_kart_exists(message.from_user.id) == True:
                try:
                    if await check_sub_channels(await sq.give_ID_sponsor(), message.from_user.id):
                        await message.answer('–í–µ–¥—ñ—Ç—å —Å—É–º—É —è–∫—É –±–∞–∂–∞—î—Ç–µ –≤–∏–≤–µ—Å—Ç–∏')
                        await FSMUsers.sum.set()
                    else:
                        await message.answer(NOT_SUB_MESSAGE, reply_markup=client_mkr.sponsor_markups(sponsor))
                except:
                    await bot.send_message(ADMIN_ID, "–•—Ç–æ—Å—å –∑ —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤ –Ω–µ –¥–æ–¥–∞–≤ –±–æ—Ç–∞ –≤ –∞–¥–º—ñ–Ω–∏")
                    await message.answer('–í–µ–¥—ñ—Ç—å —Å—É–º—É —è–∫—É –±–∞–∂–∞—î—Ç–µ –≤–∏–≤–µ—Å—Ç–∏')
                    await FSMUsers.sum.set()
            else:
                await message.answer('‚ö†Ô∏è –í–∏ —â–µ –Ω–µ –¥–æ–¥–∞–ª–∏ –∫–∞—Ä—Ç—É ‚ö†Ô∏è', reply_markup=client_mkr.add_kart)
# –ö–Ω–æ–ø–∫–∞ "–ú–û–Ø –°–°–ò–õ–ö–ê"
        elif message.text == '–ú–æ—è —Å—Å–∏–ª–∫–∞ üîó':
            sponsor = await sq.give_sponsor()
            try:
                if await check_sub_channels(await sq.give_ID_sponsor(), message.from_user.id):
                    await message.answer(f"–í–∞—à–∞ —Å—Å–∏–ª–∫–∞: https://t.me/{BOT_NICKNAME}?start={message.from_user.id}", reply_markup=client_mkr.KabinetMarkups)
                else:
                    await message.answer(f"‚ùóÔ∏è –©–æ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ —Å–≤–æ—é —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É —Å—Å–∏–ª–∫—É –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—ñ–¥–ø–∏—Å–∞—Ç–∏—Å—è –Ω–∞ –≤—Å—ñ –∫–∞–Ω–∞–ª–∏ —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤", reply_markup=client_mkr.sponsor_markups(sponsor))
            except:
                await bot.send_message(ADMIN_ID, f"–•—Ç–æ—Å—å –∑ —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤ –Ω–µ –¥–æ–¥–∞–≤ –±–æ—Ç–∞ –≤ –∞–¥–º—ñ–Ω–∏ {sq.give_ID_sponsor()}")
                await message.answer(f"–í–∞—à–∞ —Å—Å–∏–ª–∫–∞: https://t.me/{BOT_NICKNAME}?start={message.from_user.id}", reply_markup=client_mkr.KabinetMarkups)
# –ö–Ω–æ–ø–∫–∞ "–ì–û–õ–û–í–ù–ï –ú–ï–ù–Æ"
        elif message.text == '–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚¨ÖÔ∏è': 
            await message.answer(f"–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚¨ÖÔ∏è", reply_markup=client_mkr.ClientMenu)

# ===================================== –ú–µ–Ω—é –∫–Ω–æ–ø–∫–∏ "–°–¢–ê–¢–ò –°–ü–û–ù–°–û–†–û–ú" =======================================================
# –ö–Ω–æ–ø–∫–∞ "–ü–†–û–î–û–í–ñ–ò–¢–ò"
        elif message.text == '–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ ‚úÖ':
            await message.answer(f"–í–∏–±–µ—Ä—ñ—Ç—å –±–∞–∂–∞–Ω–∏–π —Ç–∞—Ä–∏—Ñ:\n\nüü¢ <b>–ù–∞ 3 –¥–Ω—ñ</b>\n–ü—Ä–∏—Ö—ñ–¥ <b>50-150</b> –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ üë•\n–í–∞—ñ—Ä—Ç—ñ—Å—Ç—å <b>{await sq.sp_3days_price()}</b> –≥—Ä–Ω üíµ\n(<b>–î–ª—è PREMIUM {await sq.sp_3days_price()-20} –≥—Ä–Ω</b>)\n\nüü¢ <b>–ù–∞ 6 –¥–Ω—ñ–≤</b>\n–ü—Ä–∏—Ö—ñ–¥ <b>200-300</b> –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ üë•\n–í–∞—Ä—Ç—ñ—Å—Ç—å <b>{await sq.sp_6days_price()}</b> –≥—Ä–Ω üíµ\n(<b>–î–ª—è PREMIUM {await sq.sp_6days_price()-20} –≥—Ä–Ω</b>)\n\nüü¢ <b>–ù–∞ 10 –¥–Ω—ñ–≤</b>\n–ü—Ä–∏—Ö—ñ–¥ <b>400-500</b> –ø—ñ–¥–ø–∏—Å–Ω–∏–∫—ñ–≤ üë•\n–í–∞—Ä—Ç—ñ—Å—Ç—å <b>{await sq.sp_10days_price()}</b> –≥—Ä–Ω üíµ\n(<b>–î–ª—è PREMIUM {await sq.sp_10days_price()-20} –≥—Ä–Ω</b>)", reply_markup=client_mkr.Tarif , parse_mode='HTML')
            await FSMUsers.Tarif.set()
        
# ========================================= –ú–µ–Ω—é –∫–Ω–æ–ø–∫–∏ "PREMIUM" ===========================================================
# –ö–Ω–æ–ø–∫–∞ "–ö–£–ü–ò–¢–ò –ü–†–ï–ú–Ü–£–ú"
        elif message.text == '–ö—É–ø–∏—Ç–∏ –ø—Ä–µ–º—ñ—É–º üíé':
            await message.answer(f"PREMIUM –∞–∫–∞—É–Ω—Ç –±—É–¥–µ –∞–∫—Ç–∏–≤–æ–≤–∞–Ω–æ –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏\n–í–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ—Å–ª—É–≥–∏: <b>{await sq.premium_ak_price()}</b> –≥—Ä–Ω\n–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏:\nüí≥ Privat24: 5457082223804449\nüí≥ mono: 5375414127416989\n\n–ß–µ–∫–∞—é —Å–∫—Ä—ñ–Ω –æ–ø–ª–∞—Ç–∏ üòä", parse_mode='HTML', reply_markup=client_mkr.Out)
            await FSMUsers.zajavka_prem.set()
            
# ========================================= –ú–µ–Ω—é –∫–Ω–æ–ø–∫–∏ "–ú–û–á –†–ï–ö–í–Ü–ó–ò–¢–ò" =====================================================
# –ö–Ω–æ–ø–∫–∞ "–î–û–î–ê–¢–ò –ü–†–ï–ú–Ü–£–ú"
        elif message.text == '–î–æ–¥–∞—Ç–∏ –∫–∞—Ä—Ç—É üí≥':
            await message.answer('–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∏', reply_markup=types.ReplyKeyboardRemove())
            await FSMUsers.addedit_kart.set()
        elif message.text == '–í–∏–¥–∞–ª–∏—Ç–∏ –∫–∞—Ä—Ç—É ‚ùå':
            await sq.delete_kart(message.from_user.id)
            await message.answer('–ö–∞—Ä—Ç—É –≤–∏–¥–∞–ª–µ–Ω–æ ‚úÖ', reply_markup=client_mkr.add_kart)
        elif message.text == '–ó–º—ñ–Ω–∏—Ç–∏ –∫–∞—Ä—Ç—É ‚öí':
            await message.answer('–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∏', reply_markup=types.ReplyKeyboardRemove())
            await FSMUsers.addedit_kart.set()

# =============================================== –°–ò–°–¢–ï–ú–ù–ê –ß–ê–°–¢–ò–ù–ê ==========================================================

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª
async def check_sub_channels(channels, user_id):
    channel = await sq.give_ID_sponsor()
    for channel in channels:
        chat_member = await bot.get_chat_member(chat_id=channel[0], user_id=user_id)
        if chat_member['status'] == 'left':
            return False
    return True

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–∞–ª–±–µ–∫
async def callback_cmd(callback: types.CallbackQuery, state: FSMContext):
    if callback.data == 'out':
        await bot.delete_message(callback.from_user.id, callback.message.message_id)

# –û–±—Ä–æ–±–æ—Ç—á–∏–∫ –≤–∏–±–æ—Ä—É —Ç–∞—Ä–∏—Ñ–∞ –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä–∫—É
async def tarif_sponsor(message: types.Message, state: FSMContext):
    async with state.proxy() as users_data:
        if message.text == 'üü¢ –ù–∞ 3 –¥–Ω—ñ':
            users_data['date'] = '3 –¥–Ω—ñ'
            users_data['price'] = await sq.sp_3days_price()
            await message.answer(f'–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å—Å–∏–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª', reply_markup=client_mkr.Out)
            await FSMUsers.url.set()
        elif message.text == 'üü¢ –ù–∞ 6 –¥–Ω—ñ–≤':
            users_data['date'] = '6 –¥–Ω—ñ–≤'
            users_data['price'] = await sq.sp_6days_price()
            await message.answer(f'–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å—Å–∏–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª', reply_markup=client_mkr.Out)
            await FSMUsers.url.set()
        elif message.text == 'üü¢ –ù–∞ 10 –¥–Ω—ñ–≤':
            users_data['date'] = '10 –¥–Ω—ñ–≤'
            users_data['price'] = await sq.sp_10days_price()
            await message.answer(f'–í—ñ–¥–ø—Ä–∞–≤—Ç–µ —Å—Å–∏–ª–∫—É –Ω–∞ –∫–∞–Ω–∞–ª', reply_markup=client_mkr.Out)
            await FSMUsers.url.set()
        elif message.text == '–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚¨ÖÔ∏è':
            await message.answer(f"–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é ‚¨ÖÔ∏è", reply_markup=client_mkr.ClientMenu)
            await FSMUsers.users.set()
        else:
            await message.answer(f'–Ø –≤–∞—Å –Ω–µ —Ä–æ–∑—É–º—ñ—é üòï')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å—Å–∏–ª–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª —Å–ø–æ–Ω—Å–æ—Ä–∞
async def url(message: types.Message, state: FSMContext):
    async with state.proxy() as users_data:
        url = message.text
        users_data['url'] = url
        if url == '‚ùå –í—ñ–¥–º—ñ–Ω–∏—Ç–∏ ‚ùå':
            await FSMUsers.users.set()
            await message.answer(f'–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é', reply_markup=client_mkr.ClientMenu)
        elif url[:8] == 'https://':
            await message.answer(f"–ö–∞–Ω–∞–ª –∑'—è–≤–∏—Ç—å—Å—è –≤ —Å–ø–∏—Å–∫—É —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤ –ø—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏\n–í–∞—Ä—Ç—ñ—Å—Ç—å –ø–æ—Å–ª—É–≥–∏: <b>{users_data['price']}</b> –≥—Ä–Ω\n–†–µ–∫–≤—ñ–∑–∏—Ç–∏ –¥–ª—è –æ–ø–ª–∞—Ç–∏:\nüí≥ Privat24: 5457082223804449\nüí≥ mono: 5375414127416989\n\n–ß–µ–∫–∞—é –Ω–∞ —Å–∫—Ä—ñ–Ω –æ–ø–ª–∞—Ç–∏ üòä", parse_mode='HTML', reply_markup=client_mkr.Out)
            await FSMUsers.zajavka.set()
        elif url[:8] != 'https://':
            await message.answer(f'‚ö†Ô∏è –¶–µ –Ω–µ —Å—Å–∏–ª–∫–∞ ‚ö†Ô∏è')

# –û–±—Ä–æ–±–∫–∞ —Å–∫—Ä—ñ–Ω–∞ –æ–ø–ª–∞—Ç–∏ —ñ –≤—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä—Å—Ç–≤–æ
async def zajavka(message: types.Message, state: FSMContext):
    async with state.proxy() as users_data:
        mess_time = datetime.datetime.today().replace(microsecond=0)
        if message.text == '‚ùå –í—ñ–¥–º—ñ–Ω–∏—Ç–∏ ‚ùå':
            await message.answer(f'–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é', reply_markup=client_mkr.ClientMenu)   
            await FSMUsers.users.set()
        elif message.photo:
            photo = message.photo[-1].file_id
            await bot.send_photo(ADMIN_ID, photo=photo, caption=(f"–ó–∞—è–≤–∫–∞ –Ω–∞ —Å–ø–æ–Ω—Å–æ—Ä—Å—Ç–≤–æ üîë\n–í—ñ–¥: @{await sq.username(message.from_user.id)}\nID: @{message.from_user.id}\n–°—Å–∏–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª: {users_data['url']}\n–î–æ —Å–ø–ª–∞—Ç–∏: {users_data['price']} –≥—Ä–Ω\n–ü–µ—Ä—ñ–æ–¥: {users_data['date']}\n–î–∞—Ç–∞: {mess_time}"))
            await message.answer(f"–ó–∞—è–≤–∫—É —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ\n–í–∞—à –∫–∞–Ω–∞–ª –∑'—è–≤–∏—Ç—å—Å—è —É —Å–ø–∏—Å–∫—É —Å–ø–æ–Ω—Å–æ—Ä—ñ–≤ —á–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω üëå\n–Ø–∫—â–æ —Ü—å–æ–≥–æ –Ω–µ —Å—Ç–∞–ª–æ—Å—è –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üë§", reply_markup=client_mkr.ClientMenu)
            await FSMUsers.users.set()
        else:
            await message.answer(f'‚ö†Ô∏è –¶–µ –Ω–µ —Ñ–æ—Ç–æ ‚ö†Ô∏è')

# –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏ –Ω–∞ PREMIUM –∞–∫–∞—É–Ω—Ç
async def zajavka_prem(message: types.Message, state: FSMContext):
    async with state.proxy() as admin_data:
        mess_time = datetime.datetime.today().replace(microsecond=0)
        if message.text == '‚ùå –í—ñ–¥–º—ñ–Ω–∏—Ç–∏ ‚ùå':
            await message.answer(f'–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é', client_mkr.ClientMenu)   
            await FSMUsers.users.set()
        elif message.photo:
            photo = message.photo[-1].file_id
            await bot.send_photo(ADMIN_ID, photo=photo, caption=(f'–ó–∞—è–≤–∫–∞ –Ω–∞ PREMIUM –∞–∫–∞—É–Ω—Ç üîë\n–í—ñ–¥: @{await sq.username(message.from_user.id)}\nID: @{message.from_user.id}\n–î–∞—Ç–∞: {mess_time}'))
            await message.answer(f"–ó–∞—è–≤–∫—É —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ\nPREMIUM –∞–∫–∞—É–Ω—Ç –±—É–¥–µ –¥–æ—Å—Ç—É–ø–Ω–∏–π —á–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω üëå\n–Ø–∫—â–æ —Ü—å–æ–≥–æ –Ω–µ —Å—Ç–∞–ª–æ—Å—è –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üë§", reply_markup=client_mkr.ClientMenu)
            await FSMUsers.users.set()
        else:
            await message.answer(f'‚ö†Ô∏è –¶–µ –Ω–µ —Ñ–æ—Ç–æ ‚ö†Ô∏è')

# –î–æ–≤–∞—Ç–∏ –∞–±–æ –∑–º—ñ–Ω–∏—Ç–∏ –∫–∞—Ä—Ç—É —é–∑–µ—Ä–∞  
async def addedit_kart(message: types.Message, state: FSMContext):
    if re.match(r'\d{4}\s\d{4}\s\d{4}\s\d{4}', message.text) and len(message.text) == 19 or re.match(r'\d{16}', message.text) and len(message.text) == 16:        
        kart_id = message.text
        await sq.addedit_kart(message.from_user.id, kart_id)
        await message.answer(f"–ö–∞—Ä—Ç—É {message.text} —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ ‚úÖ", reply_markup=client_mkr.requisitesMENU)
        await FSMUsers.users.set()
    else:
        await message.answer('‚ö†Ô∏è –¶–µ –Ω–µ –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç–∏ ‚ö†Ô∏è')

# @dp.message_handler(state=FSMUsers.sum)
async def sum(message: types.Message, state: FSMContext):
    mess_time = datetime.datetime.today().replace(microsecond=0)
    if message.text.isdigit():
        user_sum = int(message.text)
        if user_sum <= (await sq.user_balance(message.from_user.id)):
            if await sq.premium_user_exists(message.from_user.id) != 'prem':
                if user_sum >= await sq.minimum_default_out():
                    user_balance = (await sq.user_balance(message.from_user.id))-user_sum
                    await sq.edit_balance(message.from_user.id, user_balance)
                    await bot.send_message(ADMIN_ID, f"–ó–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–≤—ñ–¥ –≥—Ä–æ—à–µ–π üíµ\n–í—ñ–¥: @{await sq.username(message.from_user.id)}\nID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: @{message.from_user.id}\n–°—É–º–∞: <b>{user_sum}</b> –≥—Ä–Ω\n –î–∞—Ç–∞: {mess_time}", parse_mode='HTML')
                    await message.answer(f'–ó–∞—è–≤–∫—É –Ω–∞ –≤–∏–≤—ñ–¥ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ\n–ì—Ä–æ—à—ñ –±—É–¥—É—Ç—å –Ω–∞ –≤–∞—à—ñ–π –∫–∞—Ä—Ç—ñ —á–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω üëå\n–Ø–∫—â–æ –≥—Ä–æ—à—ñ –Ω–µ –ø—Ä–∏–π—à–ª–∏ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üë§', reply_markup=client_mkr.ClientMenu)
                    sum_out = (await sq.user_balance_out(message.from_user.id)+user_sum)
                    await sq.edit_sum_out(message.from_user.id, sum_out)
                    await FSMUsers.users.set()
                elif user_sum < await sq.minimum_default_out():
                    await message.answer(f'‚ö†Ô∏è –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤–∏–≤–æ–¥—É: {await sq.minimum_default_out()} ‚ö†Ô∏è')
            elif await sq.premium_user_exists(message.from_user.id) == 'prem':
                if user_sum >= await sq.minimum_prem_out():
                    user_balance = (await sq.user_balance(message.from_user.id))-user_sum
                    await sq.edit_balance(message.from_user.id, user_balance)
                    await bot.send_message(ADMIN_ID, f"–ó–∞—è–≤–∫–∞ –Ω–∞ –≤–∏–≤—ñ–¥ –≥—Ä–æ—à–µ–π üíµ\n–í—ñ–¥: @{await sq.username(message.from_user.id)}\nID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞: @{message.from_user.id}\n–°—É–º–∞: <b>{user_sum}</b> –≥—Ä–Ω\n–ü—Ä–µ–º—ñ—É–º: ‚úÖ\n –î–∞—Ç–∞: {mess_time}", parse_mode='HTML')
                    await message.answer(f'–ó–∞—è–≤–∫—É –Ω–∞ –≤–∏–≤—ñ–¥ —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ ‚úÖ‚úÖ\n–ì—Ä–æ—à—ñ –±—É–¥—É—Ç—å –Ω–∞ –≤–∞—à—ñ–π –∫–∞—Ä—Ç—ñ —á–µ—Ä–µ–∑ –∫—ñ–ª—å–∫–∞ —Ö–≤–∏–ª–∏–Ω üëå\n–Ø–∫—â–æ –≥—Ä–æ—à—ñ –Ω–µ –ø—Ä–∏–π—à–ª–∏ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞ üë§', reply_markup=client_mkr.ClientMenu)
                    sum_out = (await sq.user_balance_out(message.from_user.id)+user_sum)
                    await sq.edit_sum_out(message.from_user.id, sum_out)
                    await FSMUsers.users.set()
                elif user_sum < await sq.minimum_prem_out():
                    await message.answer(f'‚ö†Ô∏è –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∞ —Å—É–º–∞ –≤–∏–≤–æ–¥—É: {await sq.minimum_prem_out()} ‚ö†Ô∏è')
        else:
            await message.answer('‚ö†Ô∏è –ù–∞ –≤–∞—à–æ–º—É —Ä–∞—Ö—É–Ω–∫—É –Ω–µ –¥–æ—Å—Ç–∞—Ç–Ω—å–æ –∫–æ—à—Ç—ñ–≤ ‚ö†Ô∏è', reply_markup=client_mkr.Sum_menu)
            FSMUsers.users.set()
    else:
        await message.answer('‚ö†Ô∏è –¶–µ –Ω–µ —á–∏—Å–ª–æ ‚ö†Ô∏è')

# –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è –≤—Å—ñ—Ö —Ö–µ–¥–ª–µ—Ä—ñ–≤
def register_handlers_client(dp : Dispatcher):
    dp.register_message_handler(btn_client, state=FSMUsers.users)
    dp.register_callback_query_handler(callback_cmd, state=FSMUsers.all_states)
    dp.register_message_handler(tarif_sponsor, state=FSMUsers.Tarif)
    dp.register_message_handler(url, state=FSMUsers.url)
    dp.register_message_handler(zajavka, state=FSMUsers.zajavka, content_types=types.ContentTypes.ANY)
    dp.register_message_handler(zajavka_prem, state=FSMUsers.zajavka_prem, content_types=types.ContentTypes.ANY)
    dp.register_message_handler(addedit_kart, state=FSMUsers.addedit_kart)
    dp.register_message_handler(sum, state=FSMUsers.sum)